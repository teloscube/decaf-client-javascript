import r from"axios";import e from"qs";import{ApolloClient as n,HttpLink as t,InMemoryCache as o}from"@apollo/client/core";import i from"cross-fetch";export{gql}from"graphql-tag";function a(){return a=Object.assign||function(r){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(r[t]=n[t])}return r},a.apply(this,arguments)}function s(r){if("token"in r)return{Authorization:"Token "+r.token};if("key"in(e=r)&&"secret"in e)return{Authorization:"Key "+r.key+":"+r.secret};var e;if(function(r){return"username"in r&&"password"in r}(r)){if("undefined"==typeof Buffer)throw Error("Buffer is undefined. Are you in node environment?");return{Authorization:"Basic "+Buffer.from(r.username+":"+r.password).toString("base64")}}throw new Error("Unkown DECAF API credentials type")}function c(n,t){return r.create({baseURL:""+n,responseType:"json",headers:a({"Content-Type":"application/json"},s(t)),paramsSerializer:{serialize:function(r){return e.stringify(r,{arrayFormat:"repeat"})}}})}function f(n,t){return r.create({baseURL:n+"/api",responseType:"json",headers:a({"Content-Type":"application/json"},s(t)),paramsSerializer:{serialize:function(r){return e.stringify(r,{arrayFormat:"repeat"})}}})}function u(r,e){return new n({link:new t({uri:r+"/apis/microlot/v1/graphql",fetch:i,headers:s(e)}),cache:new o,defaultOptions:{watchQuery:{fetchPolicy:"no-cache",errorPolicy:"ignore"},query:{fetchPolicy:"no-cache",errorPolicy:"all"}}})}function p(r,e){return{bare:c(r,e),barista:f(r,e),microlot:u(r,e),credentials:e}}export{p as buildDecafClient};
//# sourceMappingURL=index.module.js.map
